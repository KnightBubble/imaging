#!/usr/bin/env node
var childProcess = require('child_process'),
    phantomjs = require('phantomjs'),
    program = require('commander'),
    colors = require('colors'),
    config = require('../config.js'),
    binPath = phantomjs.path;

program
    .version('0.0.2-1')
    .usage('<path> [options]')
    .option('-c, --char <charater>', 'set the char as the pixels of image')
    .option('-l, --left <left>', 'set the left position of image')
    .option('-w, --width <width>', 'set the width to render the image in terminal');

program.parse(process.argv);
 // program
 //   .command('node')
 //   .description('run remote setup commands')
 //   .action(function(){
 //     console.log('setup');
 //   });
var imgUri = process.argv[2];

function fixedImageUrl(url) {
    if (url.match(/http[s]*\:\/\//)) return url;
    else if (url.match(/[a-zA-Z]\:/) || url.match(/^\//)) return url;
    else return process.cwd().replace('/$','') + '/' + url;
}

if (!imgUri) {
    console.log('Please give a correct image url !'.red)
    return;
} else {
    imgUri = fixedImageUrl(imgUri);
}

var childArgs = [
      __dirname + '/../run.js',
      encodeURIComponent(imgUri)
    ],
    optParams = {};

if (program.width) {
  optParams.width = program.width;
} else {
  optParams.width = config.defaultWidth;
}

if (program.char) {
    optParams.char = program.char;
} else {
    optParams.char = config.char.default;
}

if (program.left) {
    optParams.left = program.left;
} else {
    optParams.left = config.defaultLeft;
}

childArgs.push(JSON.stringify(optParams));
childArgs.push(encodeURIComponent(__dirname));
childArgs.push('../');

childProcess.execFile(binPath, childArgs, function(err, stdout, stderr) {
  if (err) console.log(err);
  else console.log(stdout);
})